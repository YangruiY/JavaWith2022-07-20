package com.Static_;

public class Static {
    //类名.类变量名
    // 说明：类变量是随着类的加载而创建，所以即使没有创建对象实例也可以访问

    //类方法(静态方法)中 只能访问 静态变量 或静态方法
    // 口诀:静态方法只能访问静态成员

    //普通成员方法，既可以访问 非静态成员，也可以访问静态成员
    //小结: 非静态方法可以访问 静态成员和非静态成员(所有)


    //小结：记住两句话
        // (1) 静态方法，只能访问静态成员
        // (2) 非静态方法，可以访问所有的成员
        // (3) 在编写代码时，仍然要遵守访问权限规则


    //代码块
    //类被加载的情况举例
    // 1. 创建对象实例时(new)
    // AA aa = new AA();
    // 2. 创建子类对象实例，父类也会被加载, 而且，父类先被加载，子类后被加载
    // AA aa2 = new AA(); //3. 使用类的静态成员时(静态属性，静态方法)
    // System.out.println(Cat.n1);
    // static 代码块，是在类加载时，执行的，而且只会执行一次


    //调用顺序
        // (1) 静态代码块 或者静态方法属性 被调用...
        // (2) 普通代码块 或者普通方法属性 被调用...
        // (5) 类的构造器被调用

}

class A {
    //类变量
    private static String  name = "yr";

    //普通属性/普通成员变量/非静态属性/非静态成员变量/实例变量
    private int num;
}